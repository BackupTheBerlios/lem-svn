<?xml version="1.0"?>
<project name="lem" default="jarfile" basedir=".">

    <property name="name" value="lem" />
    <property name="src.dir" value="${basedir}/src" />
    <property name="model.dir" value="${basedir}/model" />
    <property name="doc.dir" value="${basedir}/doc" />
    <property name="samples.dir" value="${basedir}/samples" />
    <property name="build.dir" value="${basedir}/build" />
    <property name="classes.dir" value="${build.dir}/classes" />
    <property name="etc.dir" value="${basedir}/etc" />
    <property name="javacchome"
        value="C:\Program Files\Java\javacc-3.2" />
    <property name="deploy.name" value="${name}.jar" />
    <property name="lib.dir" value="${basedir}/lib" />


  <!-- The classpath for compile the eLEMinator -->
  <path id="build.classpath" description="Classpath for compiling the eLEMinator">
    <pathelement location="${lib.dir}"/>
    <fileset dir="${lib.dir}">
        <include name="*.jar"/>
    </fileset>
  </path>
  
  <path id="run.classpath" description="Classpath for running the eLEMinator">
    <pathelement location="${lib.dir}"/>
    <fileset dir="${lib.dir}">
        <include name="*.jar"/>
    </fileset>
    <pathelement location="${build.dir}/classes"/>
  </path>

  <target name="init">
    <uptodate property="build.jjtUptodate"
      srcfile="${src.dir}/LemParser.jjt"
      targetfile="${src.dir}/parser/.timestamp" />
  </target>
  
  <target name="prepare" depends="generate">
    <mkdir dir="${classes.dir}" />
  </target>

  <target name="cleanjjt_maybe" depends="init" unless="build.jjtUptodate">
    <delete file="${src.dir}/parser/.timestamp" />
    <delete file="${src.dir}/LemParser.jj" />
    <delete>
      <fileset dir="${src.dir}/parser">
        <include name="*.*" />
        <exclude name="LemNode.java" />
        <exclude name="SimpleNode.java" />
        <exclude name="package.html" />
      </fileset>
    </delete>
  </target>

  <!-- cleanjjt should be set jjtUptodate to false, call cleanjjt_maybe -->
  <target name="cleanjjt">
    <delete file="${src.dir}/parser/.timestamp" />
    <delete file="${src.dir}/LemParser.jj" />
    <delete>
      <fileset dir="${src.dir}/parser">
        <include name="*.*" />
        <exclude name="LemNode.java" />
        <exclude name="SimpleNode.java" />
        <exclude name="package.html" />
      </fileset>
    </delete>
  </target>
  
  <target name="generate" depends="init,cleanjjt_maybe">
    <jjtree target="${src.dir}/LemParser.jjt"
    javacchome="${javacchome}"
    outputdirectory="${src.dir}/parser" />

    <javacc target="${src.dir}/parser/LemParser.jj"
    javacchome="${javacchome}"
    outputdirectory="${src.dir}/parser" />
    <!--
    <exec executable="perl"
      output="${src.dir}/verifier/Visitor.java">
      <arg line="${src.dir}/util/generateVisitor.pl
      ${src.dir}/parser/LemParserVisitor.java"/>
    </exec>
    -->
    <touch file="${src.dir}/parser/.timestamp" />
  </target>

  <target name="compile_one" depends="init">
    <javac srcdir="${src.dir}" destdir="${classes.dir}"
    debug="true" includes="${filename}" deprecation="true"
    optimize="false"/>
  </target>
  
  
  <target name="compile" depends="prepare">
    <copy todir="${classes.dir}/verifier">
        <fileset dir="${src.dir}/verifier/">
            <include name="*.jpg"/>
            <exclude name="eLEMinator.jpg"/>
        </fileset>
    </copy>
    <copy file="${src.dir}/splash/eLEMinator.jpg" todir="${classes.dir}/splash"/>
    
    <javac srcdir="${src.dir}" destdir="${classes.dir}"
        classpathref="build.classpath" debug="true"
        deprecation="true" optimize="false"
        excludes="test/**" />
  </target>
  
  <target name="jarfile" depends="compile">
    <copy file="${etc.dir}/SemanticChecks.properties"
    todir="${classes.dir}" overwrite="true" />
    <jar destfile="${build.dir}/${name}.jar"
    basedir="${classes.dir}" manifest="${etc.dir}/MANIFEST.MF" />
  </target>

  <target name="cleandoc" depends="init">
    <delete dir="${classes.dir}" />
    <delete dir="${doc.dir}/javadoc"/>
    <mkdir dir="${doc.dir}/javadoc" />
  </target>

  <target name="clean" depends="cleandoc,cleanjjt" />

  <target name="docs" depends="init,cleandoc">
    <javadoc sourcepath="${src.dir}" destdir="${doc.dir}/javadoc"
    author="true" version="true" use="true" private="true"
    windowtitle="LEM Documentation">
      <fileset dir="${src.dir}" includes="*.java" />
      <fileset dir="${src.dir}/parser" includes="*.java" />
      <fileset dir="${src.dir}/verifier" includes="*.java" />
      <fileset dir="${src.dir}/metamodel" includes="*.java" />
      <fileset dir="${src.dir}/util" includes="*.java" />
      <fileset dir="${src.dir}/test" includes="*.java" />
      <fileset dir="${src.dir}/tools" includes="*.java" />
      <fileset dir="${src.dir}/runtime" includes="*.java" />
      <fileset dir="${src.dir}/splash" includes="*.java" />
      <bottom>
        <![CDATA[<em>Copyright &copy; 2004</em></div>]]>
      </bottom>
      <link href="http://java.sun.com/products/jdk/1.4/docs/api" />
    </javadoc>
    <jjdoc target="${src.dir}/LemParser.jjt"
    javacchome="${javacchome}"
    outputfile="${doc.dir}/jjdoc/LemParser.html"
    onetable="false" />
  </target>
  
  <target name="run" depends="init">
    <java classname="splash.Splasher" fork="true"
    classpathref="run.classpath"/>
  </target>
  
  <target name="runjar" depends="init">
    <java jar="build/lem.jar" fork="true" classpathref="build.classpath" />
  </target>
  
  <target name="runGUILog" depends="init">
   <java classname="mockups.guiLogging" fork="true"
   classpathref="run.classpath"/>
  </target>
  
  <target name="debug" depends="init">
    <java classname="verifier.Eleminator" fork="true"
    classpathref="run.classpath">
      <jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,address=8888,suspend=y" />
      <arg line="${lemSourceFile}" />
    </java>
  </target>
  
  <!-- Test related stuff -->
  
  <target name="compile_tests" depends="compile">
    <javac srcdir="${src.dir}/test" destdir="${classes.dir}"
        classpathref="build.classpath" debug="true"
        deprecation="true" optimize="false" />
  </target>
  
  <target name="test" depends="compile_tests">
    <junit fork="yes" dir="${basedir}">
        <formatter type="plain"/>
        <classpath refid="run.classpath"/>
        <batchtest todir="${build.dir}">
            <fileset dir="${build.dir}/classes">
                <include name="**/*Test.class"/>
            </fileset>
        </batchtest>
        
    </junit>
  </target>
  
  <target name="debug_single_test" depends="compile">
    <fail message="classname property must be specified" unless="classname"/>
    <echo message="Debugging ${classname}Test"/>
    <junit fork="yes" dir="${basedir}">
        <jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,address=8888,suspend=y" />
        <formatter type="plain"/>
        <classpath path="${build.dir}/classes"/>
        <test todir="${build.dir}" name="${classname}Test" />
    </junit>
  </target>
</project>

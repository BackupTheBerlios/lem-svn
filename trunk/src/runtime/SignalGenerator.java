/*
 * SignalGenerator.java
 *
 * Created on 20 August 2005, 13:38
 *
 * Copyright (C) 2005 Shuku Torabi
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
 * USA.
 */

package runtime;

import java.util.Calendar ;
import java.util.GregorianCalendar ;
/**
 *
 * @author root
 */
public class SignalGenerator extends java.lang.Thread{
    
    /** The target to which send the signal **/
    private runtime.Object target = null ;
    
    /** The currentObject sending the signal **/
    private runtime.Object currentObject = null ;
    
    /** Signal which shall be sent to the target **/
    private runtime.Signal signal = null ;
    
    /** time which the signal has been created **/
    private Calendar created = null ;
    
    /** Creates a new instance of SignalGenerator */
    public SignalGenerator(Signal signal, Object target, Object currentObject) {
        this.signal = signal  ;
        this.target = target ;
        this.currentObject = currentObject ;
        this.created = Calendar.getInstance() ;
        System.out.println( created.getTime().getTime() ) ; 
        start() ;
    }
    
    public void run(){     
        //System.out.println("Generated a signal") ; 
        while (true) {
            //System.out.println("Inside loop") ; 
            Calendar rightNow = Calendar.getInstance() ;
            long time = rightNow.getTime().getTime() ;          
            System.out.println("Current Time :" + time + " - Creation Time: " + created.getTime().getTime() + " - Delay: "
                    + signal.getDelayTime() ) ; 
            if ( created.getTime().getTime() + signal.getDelayTime() <= time ) {
                try {
                    if (target == currentObject) {
                        target.addSignalSelf(signal);
                        break ;
                    } else {
                        target.addSignal(signal);
                        break ;
                    }
                }catch (LemRuntimeException e) {
                    // ??
                    break ;
                }
            }else {
                try {
                    sleep(1) ;                
                }catch(Exception e) {
                    //??
                    break ;
                }
            }
        }
        System.out.println("Signal Generated by signal generator.") ; 
    }    
}

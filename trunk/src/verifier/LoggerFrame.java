/*
 * LoggerFrame.java
 *
 * Created on September 6, 2005, 3:52 PM
 *
 * Copyright (C) 2005 David Gavin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
 * USA.
 */

package verifier;

import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import javax.swing.JTextPane;
import org.jdns.xtuml.metamodel.Scenario;

/**
 * Creates a logger frame with the associated scenario executor and 
 * context tree. Has methods getScenarioExecutor, getContextTree and
 * getDescriptionPane
 *
 * @author  David Gavin
 */
public class LoggerFrame extends javax.swing.JFrame {
	private Eleminator eleminator;
	/** 
         * Creates new form LoggerFrame 
         * @param inScenario The scenario executed
         * @param inEleminator The eLEMinator  it is running in 
         */
	public LoggerFrame(Scenario inScenario, Eleminator inEleminator) {
		initComponents();
		eleminator= inEleminator;
		URL imageURL = getClass().getClassLoader().getResource("verifier/lem.jpg");
		Image lem = Toolkit.getDefaultToolkit().getImage(imageURL);
		setIconImage(lem);
		scenarioExecutor.init(inScenario, this) ; 
		this.setTitle(inScenario.getName());
		eleminator.newWindow(this);		
	}
	
        /**
         * @return The associated Scenario Executor
         */
	public ScenarioExecutor getScenarioExecutor() {
		return scenarioExecutor;
	}
	
        /**
         * @return The associated Context Tree
         */
	public ContextTree getContextTree() {
		return scenarioExecutor.getContextTree();
	}
	
        /**
         * @return The associated Description Pane
         */
	public JTextPane getDescriptionPane() {
		return scenarioExecutor.getDescriptionPane() ;
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        scenarioExecutor = new verifier.ScenarioExecutor();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        getContentPane().add(scenarioExecutor, java.awt.BorderLayout.CENTER);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    /**
     * Updates the User Interface when a component is resized to resize all components
     */
	private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
// TODO add your handling code here:
		scenarioExecutor.updateUI() ; 
	}//GEN-LAST:event_formComponentResized
	
        /**
         * Kills the running scenario when the window is closed. 
         * @param evt The close window event
         */
	private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		scenarioExecutor.killScenario();
		eleminator.killWindow(this);
	}//GEN-LAST:event_formWindowClosing
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private verifier.ScenarioExecutor scenarioExecutor;
    // End of variables declaration//GEN-END:variables
	
}

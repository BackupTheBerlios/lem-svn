/*
 * DebugControlPanel.java
 *
 * Created on September 16, 2005, 5:15 PM
 *
 * Copyright (C) 2005 Shokouhmand Torabi
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
 * USA.
 */

package verifier;

import metamodel.Scenario;
import runtime.DomainContext;

/**
 * Displays and contains the play, stop and pause buttons, time slider and lem time box 
 * for running a scenario. 
 *
 * @author  Shokouhmand Torabi
 * @see runtime.Time
 */
public class DebugControlPanel extends javax.swing.JPanel {
	
	private DomainContext context = null;
	private Scenario scenario = null;
	private ScenarioExecutor parent;
	private Thread scenarioThread = null;
	
	/**
         * Creates new form BeanForm 
         */
	public DebugControlPanel() {
		initComponents();
	}
	
        /**
         * Initalise the play, stop and pause buttons, and set the context and 
         * scenario.
         *
         * @param c The domain context of the loaded model
         * @param s The scenario executing
         * @param se The parent display which contains the tree veiw and log of the
         *           executing scenario. 
         */
	public void init(DomainContext c, Scenario s, ScenarioExecutor se) {
		//playButton.setEnabled(false);
		pauseButton.setEnabled(false) ; 
		stopButton.setEnabled(false) ; 
		playButton.setEnabled(true);
		this.context = c;
		this.scenario = s;
		this.parent = se;

		timeSlider.initialise( context ) ; 	
	}
	
	
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents() {//GEN-BEGIN:initComponents
        playButton = new javax.swing.JButton();
        seperator1 = new javax.swing.JSeparator();
        stopButton = new javax.swing.JButton();
        separator2 = new javax.swing.JSeparator();
        pauseButton = new javax.swing.JButton();
        panelTimeSeparator = new javax.swing.JSeparator();
        timeSlider = new verifier.TimeSlider();

        addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                formVetoableChange(evt);
            }
        });

        playButton.setBackground(new java.awt.Color(255, 255, 255));
        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/verifier/play.gif")));
        playButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playButtonMouseClicked(evt);
            }
        });

        add(playButton);

        add(seperator1);

        stopButton.setBackground(new java.awt.Color(255, 255, 255));
        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/verifier/stop.gif")));
        stopButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopButtonMouseClicked(evt);
            }
        });

        add(stopButton);

        add(separator2);

        pauseButton.setBackground(new java.awt.Color(255, 255, 255));
        pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/verifier/pause.gif")));
        pauseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pauseButtonMouseClicked(evt);
            }
        });

        add(pauseButton);

        panelTimeSeparator.setForeground(new java.awt.Color(255, 255, 255));
        panelTimeSeparator.setPreferredSize(new java.awt.Dimension(20, 0));
        add(panelTimeSeparator);

        add(timeSlider);

    }//GEN-END:initComponents

	private void formVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_formVetoableChange

	}//GEN-LAST:event_formVetoableChange
	
        /**
         * Pause the running scenario when the pause button is clicked,
         * enables the play button and disables the pause button.
         *
         * @param evt The mouse click event
         */
	private void pauseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseButtonMouseClicked
// TODO add your handling code here:
		if (pauseButton.isEnabled()) {
			context.getDebugObject().pauseModel();
			timeSlider.refreshTime() ; 
			pauseButton.setEnabled( false ) ;
			playButton.setEnabled(true);
		}
		parent.refreshTree() ;
	}//GEN-LAST:event_pauseButtonMouseClicked
	
        /**
         * Stop the running scenario when the stop button is clicked,
         * disables the play, pause and stop buttons.
         *
         * @param evt The mouse click event
         */
        
	private void stopButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopButtonMouseClicked
// TODO add your handling code here:
		if (stopButton.isEnabled()) {
			context.getDebugObject().stopModel() ;
			stopButton.setEnabled( false ) ;
			pauseButton.setEnabled( false ) ;
			playButton.setEnabled( false ) ;
		}
		parent.refreshTree() ;
	}//GEN-LAST:event_stopButtonMouseClicked
	
        
        /**
         * Play the paused scenario when the play button is clicked,
         * disables the play button and enables the pause and stop buttons.
         *
         * @param evt The mouse click event
         */
	private void playButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playButtonMouseClicked
// TODO add your handling code here:
		if( scenarioThread == null ) {
			scenarioThread = new Thread( parent );
			scenarioThread.start();
		} else {
			context.getDebugObject().runModel();
		}

		stopButton.setEnabled( true );
		pauseButton.setEnabled( true );
		playButton.setEnabled( false );
	}//GEN-LAST:event_playButtonMouseClicked
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator panelTimeSeparator;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton playButton;
    private javax.swing.JSeparator separator2;
    private javax.swing.JSeparator seperator1;
    private javax.swing.JButton stopButton;
    private verifier.TimeSlider timeSlider;
    // End of variables declaration//GEN-END:variables
}


/*
 * ScenarioExecutor.java
 *
 * Created on September 16, 2005, 5:05 PM
 */

package verifier;

import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import metamodel.Scenario;
import runtime.DomainContext;
import runtime.Interpreter;
import runtime.LemRuntimeException;

/**
 *
 * @author  u3958283
 */
public class ScenarioExecutor extends javax.swing.JPanel implements Runnable {
	private Interpreter interpreter;
	private Scenario scenario;
	private DomainContext context ;
	/** gui components **/
	private LoggerFrame frame ;
	private ConsoleLogger consoleLogger;
	
	/** Creates new form BeanForm */
	public ScenarioExecutor() {
		initComponents();
	}
	
	public void init(Scenario scenario, LoggerFrame frame) {
		this.scenario = scenario ;
		this.frame = frame ;
		interpreter = new Interpreter(null);
		context = new DomainContext();
		consoleLogger = new ConsoleLogger(context);
		debugControlPanel.init(context, scenario , this) ; 
		loggerPanel.init(context);
		contextTree.init(context, frame ) ;
		contextTree.setDescriptionPane( descriptionPanel) ;
		horizontalSplit.setLeftComponent(treeScroller) ; 
		verticalSplit2.setLeftComponent( descriptionPaneScroller ) ; 
		verticalSplit2.setRightComponent( loggerPanel) ; 
	}
	
	public void run() {
		try {
			interpreter.interpret(scenario, context);
		} catch(LemRuntimeException e) {
			System.out.println(e);
		}
		
	}
	
	public void refreshTree() {
		//this.removeAll() ;
		treeScroller.remove( contextTree ) ;
		ContextTree newTree = new ContextTree();
		newTree.init(context,  frame ) ;
		treeScroller.setViewportView(newTree) ; 
		//this.setAutoscrolls(true) ;
		//JScrollPane treeScroll = new JScrollPane(newTree) ;
		//treeScroll.setAutoscrolls(true ) ;
		//verticalSplit.setRightComponent( horizontalSplit1 ) ;
		//add(verticalSplit, java.awt.BorderLayout.CENTER);
		updateUI() ;
	}
	
	public String getScenarioName() {
		return scenario.getName();
	}
	public void killScenario()	{
		context.getDebugObject().stopModel();
		
	}
	
	public ContextTree getContextTree() {
		return contextTree;
	}
	
	public JTextPane getDescriptionPane() {
		return descriptionPanel;
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        horizontalSplit = new javax.swing.JSplitPane();
        treeScroller = new javax.swing.JScrollPane();
        contextTree = new verifier.ContextTree();
        verticalSplit1 = new javax.swing.JSplitPane();
        debugControlPanel = new verifier.DebugControlPanel();
        verticalSplit2 = new javax.swing.JSplitPane();
        descriptionPaneScroller = new javax.swing.JScrollPane();
        descriptionPanel = new javax.swing.JTextPane();
        loggerScroller = new javax.swing.JScrollPane();
        loggerPanel = new verifier.ContextLoggerPanel();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(1024, 768));
        horizontalSplit.setMinimumSize(new java.awt.Dimension(800, 600));
        horizontalSplit.setPreferredSize(new java.awt.Dimension(1024, 768));
        treeScroller.setMinimumSize(new java.awt.Dimension(150, 600));
        treeScroller.setPreferredSize(new java.awt.Dimension(150, 600));
        contextTree.setMaximumSize(new java.awt.Dimension(250, 768));
        contextTree.setMinimumSize(new java.awt.Dimension(150, 600));
        contextTree.setPreferredSize(new java.awt.Dimension(150, 768));
        treeScroller.setViewportView(contextTree);

        horizontalSplit.setRightComponent(treeScroller);

        verticalSplit1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        verticalSplit1.setMinimumSize(new java.awt.Dimension(650, 600));
        verticalSplit1.setPreferredSize(new java.awt.Dimension(874, 768));
        debugControlPanel.setMaximumSize(new java.awt.Dimension(1024, 80));
        debugControlPanel.setMinimumSize(new java.awt.Dimension(650, 40));
        debugControlPanel.setPreferredSize(new java.awt.Dimension(874, 768));
        verticalSplit1.setLeftComponent(debugControlPanel);

        verticalSplit2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        descriptionPaneScroller.setMinimumSize(new java.awt.Dimension(703, 200));
        descriptionPaneScroller.setPreferredSize(new java.awt.Dimension(703, 300));
        descriptionPanel.setMinimumSize(new java.awt.Dimension(700, 50));
        descriptionPanel.setPreferredSize(new java.awt.Dimension(700, 200));
        descriptionPaneScroller.setViewportView(descriptionPanel);

        verticalSplit2.setRightComponent(descriptionPaneScroller);

        loggerPanel.setMinimumSize(new java.awt.Dimension(650, 400));
        loggerPanel.setPreferredSize(new java.awt.Dimension(874, 400));
        loggerScroller.setViewportView(loggerPanel);

        verticalSplit2.setRightComponent(loggerScroller);

        verticalSplit1.setRightComponent(verticalSplit2);

        horizontalSplit.setRightComponent(verticalSplit1);

        add(horizontalSplit, new java.awt.GridBagConstraints());

    }
    // </editor-fold>//GEN-END:initComponents
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private verifier.ContextTree contextTree;
    private verifier.DebugControlPanel debugControlPanel;
    private javax.swing.JScrollPane descriptionPaneScroller;
    private javax.swing.JTextPane descriptionPanel;
    private javax.swing.JSplitPane horizontalSplit;
    private verifier.ContextLoggerPanel loggerPanel;
    private javax.swing.JScrollPane loggerScroller;
    private javax.swing.JScrollPane treeScroller;
    private javax.swing.JSplitPane verticalSplit1;
    private javax.swing.JSplitPane verticalSplit2;
    // End of variables declaration//GEN-END:variables
	
}

// An complete example of lem subsystem. 
// This example is a shameless reproduction of the 
// Online Bookstore case study drawn from appendix B of "Executable UML"
// by Mellor and Balcer 
//

model PublicationWholesaler is 
  "a system that manages the sales and distribution of books, software,
   music and related products"
  
  domain Products is
    

    type UniversalProductCode "a string that identifies a product" is string length: 10 pattern: "XXnnn-9999";
    type ISBN "a numbering system for books" is string;
    type ISBNGroupIdentifier is string length: 3;
    type ISBNPublisherPrefix is string length: 3;
    type Qty "a stock quantity" is numeric;
    type Period "a period of time in seconds" is numeric units: "seconds" precision: 1;
    type PersonName is string;
    type WebsiteURL is string;
    type InternetEmailAddress is string;
    type MailingAddress is string;
    type Year is numeric units: "years" precision: 1;
    type Money is numeric units: "cents" precision: 1; // TO DO: use range to ensure non negative

    subsystem ProductSpecification is
        "concerned with the various types of products distributed by the
         system and the people involved in the production of those products"

        object Publisher is 

            "an organisation that is responsible for producing and marketing books
             and other products sold by the store."

             attribute groupCode

                "a code that identifies a country, area or language area participating
                 in the ISBN system. Each code has an agency that is responsible for
                 assigning unique codes to publishers within its group."

                 is ISBNGroupIdentifier;

             attribute publisherCode

                "Each publisher is assigned a unique code (of one or more digits)
                 that is used to uniquely identify the publisher in an International
                 Standard Book Number (ISBN).

                 The US ISBN Agency (http://www.isbn.org) is responsible for the 
                 assignment of the ISBN Publisher Prefix to those publishers with
                 a residence of office in the US that are publishing their titles
                 within the US."

                 is ISBNPublisherPrefix;

             attribute name 

                "the name of the publisher" is string;

             attribute address 

                "The address at which the publisher receives mail. It can be a 
                 legal or common-use street address recognized by the post office,
                 or a post office box."

                 is MailingAddress;

             attribute website

                "the publisher's public website, if one exists"

                 is WebsiteURL;

             identifier
 
                "The group code, together with the publish code uniquel identifies
                 a publisher anywhere in the world"

                 is groupCode and publisherCode;

        end Publisher;

        object ProductCategory is

            "Products are classified into a hierarchy of categories. Each product is
             classified into a single category, which may be a subcategory of other
             categories."

             attribute categoryID is arbitrary_id; // TO DO ... comments please

             attribute categoryName is string; // TO DO ... comments please

             identifier is categoryID;

        end ProductCategory;

        object Product is 
            "A Product is an item available for sale by the online store. The online store
             currently offers books (hardcover and paperback), CDs, tapes, videotapes and 
             DVDs (all cladssified as 'Recordings'), and computer software"

             attribute productId "identifies the product" is UniversalProductCode;
             
             attribute productName is string; // TO-DO: this should be DERIVED
             attribute copyright is Year;
             attribute unitPrice is Money;
             attribute productDescription is string;
             attribute website is WebsiteURL;

             identifier is productId;
        end Product;

        generalisation R11 is
            Product is BookProduct, RecordingProduct or SoftwareProduct;
        end R11;

        generalisation R12 is 
            Product is StockedProduct or SpecialOrderProduct;
        end R12;

        object BookProduct specialisation of Product
            is "a paper-based publication"

            attribute id is string;
            attribute bookNumber is ISBN;

        end BookProduct;

        object SoftwareProduct specialisation of Product
            is "is a publication that is delivered on computer disk"

            attribute version is string;
        end SoftwareProduct;

        

        object StockedProduct specialisation of Product
            is "a product which is nomally kept in stock"

            attribute quantityOnHand is Qty;
        end StockedProduct;

        object SpecialOrderProduct specialisation of Product
            is "a product that is ordered to satisfy a product order"

            attribute daysToDeliver is numeric;
        end SpecialOrderProduct;

        object Author is
            "an individual who is credite with writing or contributing 
             to a book"

             attribute name is PersonName;
             attribute website is WebsiteURL;
             attribute email is InternetEmailAddress;

             identifier is name;
        end Author;

        object Recording is 

           "a particular work (sound recording, performance, movie) that is 
            available for sale by the store. Often teh same recording title is
            available in multiple formats (e.g. a single film, 'Jaws', may be
            available in DVD, VHS video and VHS video/letterboxed)."

            attribute title "the actual title of the recording" is string;

        end Recording;

        object RecordingFormat is 

           "a format in which a recording producct is available for sale. At 
            present, most recordings are sold as VHS videotapes, compact discs
            (CDs), digital video discs (DVDs) and cassette tapes. Some recordings
            are available in other formats such as long playing records.

            We've chosen to abstract the recofding fomrat as a specification
            class rather thatn an enumerated type since it is quite likely that
            new recording formats may be introduced and we don't want to have to 
            change the models to accommodate the new formats"

            attribute formatId 
                "a short code that identifies the the format" 
                is string;

            attribute formatName
                "a more expansive name that describes the format"
                is string;

            identifier is formatId;

        end RecordingFormat;

        object Artist is

           "an individual who is credited for a performance on a recording. This
            may be the 'star' or a supporting individual (producer, director)."

            attribute artistId

               "A unique identifier of the Artist. Since several different artists
                and authors may have the same name (e.g. 'Michael Jackson' the 
                performer or 'Michael Jackson' the software methodologist), we
                use a scheme whereby the name is not the unique identifier of the
                artist."

                is arbitrary_id;

            attribute name "the name of the Artist" is PersonName;

        end Artist;

        object Platform is

           "a particular configuration of computer hardware and system software 
            on which a particular software product can be run.

            Platform names are not intended to be exhaustive enumerations of the 
            hardware and system software requirements of a particular software
            product, merely enough information necessary to distinguish different
            variations of the same tite."

            attribute platformId 

               "A unique ID for a Platform. This ID is only used by the store
                -- there is no general industry standard identifier for software
                platforms."

                is arbitrary_id;

            attribute platformName 

               "the general name for the software platform, e.g. Linux, Macintosh,
                Windows NT."

                is string;

        end Platform;

        object ComputerSoftware is

           "Instances of Computer Software are programs and their supporting files
            and documentation. A particular progrma title may be available on more
            than one program and is often available in several different versions."

            attribute title "the title of the program" is string;

        end ComputerSoftware;

//
// Associations
//        


        association R1 is

            "A publisher is responsible for contracting with an author to produce
             a book and then handles teh work of marketing the book to the
             customers and retailers.

             Every book we sell is produced by some publisher. We do not sell books
             directly produced by the authors. In a few cases an author wil sell
             books directly; in those cases we use the author or the author's 
             company as the publisher."

             Publisher "produces and markets" 0..* Product;
             Product "is produced and marketed by" 1..1 Publisher;

        end R1;


        association R2 is

            "Books are generally written by Authors. Some books, however, do not
             have any authorship credits. Fot that reason this association is 
             conditional. However, every Author has written at least one book."

             Author "writes" 1..* BookProduct;
             BookProduct "is written by" 0..* Author;

             object Authorship is

                "an individual credit for writing or otherwise contirbuting to a
                 book. Many people may contribute to a book in different ways; each
                 Authorship identifies the person and his or her fole (preCredit and
                 postCredit) on the book.

                 Example: Forward by Ivar Jacobson ('Foreward By' is a preCredit), 
                 Grady Booch, editor ('Editor' is a postCredit)"

                 attribute preCredit 
                    "the words preceding the name of the author on an Authorship
                     e.g. 'Forward by...'"
                        is string;

                 attribute postCredit 
                    "the words that follows the name of the author on an Authorship
                     e.g. 'Grady Booch, editor.'"
                        is string;

             end Authorship;
        end R2;

        association R3 is 

           "Authors and other contributors are credited on a book in a specific
            order. This order is generally preserved in all promotional material, 
            including the bookstore website."

            Authorship "follows" 0..1 Authorship;
            Authorship "precedes" 0..1 Authorship;
        end R3;

        association R14 is

            "TO DO comments"

            ProductCategory "is divided into" 0..* ProductCategory;
            ProductCategory "is part of" 0..1 ProductCategory;

        end R14;

        association R15 is 

            "TO DO comments"
            
            ProductCategory "classifies" 0..* Product;
            Product "is classified according to" 1..1 ProductCategory;

        end R15;


        association R16 is 

           "Each recording is available in one or more formats. Each of these
            combinations of the title and format is a separate product."

            Recording "is available in" 1..* RecordingFormat;
            RecordingFormat "is an available format for" 1..* Recording;

            object RecordingProduct specialisation of Product is
            
               "a commercially available recording of a performance. This
                encompasses videotapes, audio tapes, CDs, phonograph records
                and similar products."

                attribute runningTime is Period;

            end RecordingProduct;


        end R16;


        association R17 is

           "Formalises the association between an Artist and Recording"

            Recording "credits" 1..* Artist;
            Artist "is credited on" 1..* Recording;

            object PerformanceCredit is

               "a particular mention ('credit') of a performer or contribution to
                a recording. Generally, several different people are listed on each
                recording, not just the principal performer(s), but also the 
                director, performer, etc. The Performance Credit is not intended to be
                a complete listing of all of the credits on a Recording, just enough
                to provide a way to look up the most popular performers on a
                recording."

                attribute role 

                   "the role of the performer as credited on the recording (e.g.
                    'directed by', 'produced by'). Not all performance credits
                    will have a value for role. In particular, the 'stars' of the
                    recording will simply be listed with no particular value for
                    role."

                    is string;

            end PerformanceCredit;

        end R17;

        association R18 is

           "Performance credits are typically specified in a particular order on a 
            recording. This association captures that ordering."

            PerformanceCredit "is credited before" 0..1 PerformanceCredit;
            PerformanceCredit "is credited after" 0..1 PerformanceCredit;

        end R18;

        association R19 is

           "Each software product is capable of running on a particular condiguration
            of computer hardware and system software -- a Platform. This association
            captures the product's compatibility.

            Some products are compatible with several platforms. In the future, we may
            make this association many-to-many and/or add a concept of one platform
            presuming compatibility with others (e.g. if it runs on NT then it is
            presumed to run on Windows 2000)."

            SoftwareProduct "is available on" 1..1 Platform;
            Platform "supports" 1..* SoftwareProduct;

        end R19;

        association R20 is

           "The same software title may be available for several platforms. 
            For example BridgePoint is published for Microsoft Windows, HP/UX
            and Solaris. Since the product contains different executables and may
            be priced differently, each platform availability is treated as a
            distinct product."

            ComputerSoftware "is available for sale as" 1..1 SoftwareProduct;
            SoftwareProduct "is an instance of" 1..* ComputerSoftware;

        end R20;


                 
    
     end ProductSpecification;
  end Products;
end PublicationWholesaler;